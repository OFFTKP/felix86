#pragma once

#include "biscuit/isa.hpp"
#include "biscuit/registers.hpp"
#include "felix86/backend/allocation_map.hpp"
#include "felix86/backend/instruction.hpp"

struct Backend;

struct Emitter {
    static void Emit(Backend& backend, const AllocationMap& allocations, const BackendInstruction& instruction);
    static void EmitJump(Backend& backend, void* target);
    static void EmitJumpConditional(Backend& backend, biscuit::GPR condition, void* target_true, void* target_false);
    static void EmitSetExitReason(Backend&, u64);
    static void EmitPushAllCallerSaved(Backend&);
    static void EmitPopAllCallerSaved(Backend&);

private:
    static void EmitCallHostFunction(Backend&, u64);
    static void EmitMov(Backend&, biscuit::GPR, biscuit::GPR);
    static void EmitMov(Backend&, biscuit::FPR, biscuit::FPR);
    static void EmitMov(Backend&, biscuit::Vec, biscuit::Vec);
    static void EmitStoreSpill(Backend&, biscuit::GPR, u32);
    static void EmitStoreSpill(Backend&, biscuit::FPR, u32);
    static void EmitStoreSpill(Backend&, biscuit::Vec, u32);
    static void EmitLoadSpill(Backend&, biscuit::GPR, u32);
    static void EmitLoadSpill(Backend&, biscuit::FPR, u32);
    static void EmitLoadSpill(Backend&, biscuit::Vec, u32);
    static void EmitImmediate(Backend&, biscuit::GPR, u64);
    static void EmitRdtsc(Backend&);
    static void EmitSyscall(Backend&);
    static void EmitCpuid(Backend&);
    static void EmitSext8(Backend&, biscuit::GPR, biscuit::GPR);
    static void EmitSext16(Backend&, biscuit::GPR, biscuit::GPR);
    static void EmitSext32(Backend&, biscuit::GPR, biscuit::GPR);
    static void EmitZext8(Backend&, biscuit::GPR, biscuit::GPR);
    static void EmitZext16(Backend&, biscuit::GPR, biscuit::GPR);
    static void EmitZext32(Backend&, biscuit::GPR, biscuit::GPR);
    static void EmitClz(Backend&, biscuit::GPR, biscuit::GPR);
    static void EmitCtzh(Backend&, biscuit::GPR, biscuit::GPR);
    static void EmitCtzw(Backend&, biscuit::GPR, biscuit::GPR);
    static void EmitCtz(Backend&, biscuit::GPR, biscuit::GPR);
    static void EmitNot(Backend&, biscuit::GPR, biscuit::GPR);
    static void EmitNeg(Backend&, biscuit::GPR, biscuit::GPR);
    static void EmitParity(Backend&, biscuit::GPR, biscuit::GPR);
    static void EmitDiv128(Backend&, biscuit::GPR);
    static void EmitDivu128(Backend&, biscuit::GPR);
    static void EmitReadByte(Backend&, biscuit::GPR, biscuit::GPR);
    static void EmitReadWord(Backend&, biscuit::GPR, biscuit::GPR);
    static void EmitReadDWord(Backend&, biscuit::GPR, biscuit::GPR);
    static void EmitReadQWord(Backend&, biscuit::GPR, biscuit::GPR);
    static void EmitReadXmmWord(Backend&, biscuit::Vec, biscuit::GPR, VectorState);
    static void EmitReadByteRelative(Backend&, biscuit::GPR, biscuit::GPR, u64);
    static void EmitReadWordRelative(Backend&, biscuit::GPR, biscuit::GPR, u64);
    static void EmitReadDWordRelative(Backend&, biscuit::GPR, biscuit::GPR, u64);
    static void EmitReadQWordRelative(Backend&, biscuit::GPR, biscuit::GPR, u64);
    static void EmitReadXmmWordRelative(Backend&, biscuit::Vec, biscuit::GPR, u64, VectorState);
    static void EmitWriteByte(Backend&, biscuit::GPR, biscuit::GPR);
    static void EmitWriteWord(Backend&, biscuit::GPR, biscuit::GPR);
    static void EmitWriteDWord(Backend&, biscuit::GPR, biscuit::GPR);
    static void EmitWriteQWord(Backend&, biscuit::GPR, biscuit::GPR);
    static void EmitWriteXmmWord(Backend&, biscuit::GPR, biscuit::Vec, VectorState);
    static void EmitWriteByteRelative(Backend&, biscuit::GPR, biscuit::GPR, u64);
    static void EmitWriteWordRelative(Backend&, biscuit::GPR, biscuit::GPR, u64);
    static void EmitWriteDWordRelative(Backend&, biscuit::GPR, biscuit::GPR, u64);
    static void EmitWriteQWordRelative(Backend&, biscuit::GPR, biscuit::GPR, u64);
    static void EmitWriteXmmWordRelative(Backend&, biscuit::GPR, biscuit::Vec, u64, VectorState);
    static void EmitAdd(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR);
    static void EmitAddi(Backend&, biscuit::GPR, biscuit::GPR, u64);
    static void EmitAmoAdd8(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR, biscuit::Ordering);
    static void EmitAmoAdd16(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR, biscuit::Ordering);
    static void EmitAmoAdd32(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR, biscuit::Ordering);
    static void EmitAmoAdd64(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR, biscuit::Ordering);
    static void EmitAmoAnd8(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR, biscuit::Ordering);
    static void EmitAmoAnd16(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR, biscuit::Ordering);
    static void EmitAmoAnd32(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR, biscuit::Ordering);
    static void EmitAmoAnd64(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR, biscuit::Ordering);
    static void EmitAmoOr8(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR, biscuit::Ordering);
    static void EmitAmoOr16(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR, biscuit::Ordering);
    static void EmitAmoOr32(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR, biscuit::Ordering);
    static void EmitAmoOr64(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR, biscuit::Ordering);
    static void EmitAmoXor8(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR, biscuit::Ordering);
    static void EmitAmoXor16(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR, biscuit::Ordering);
    static void EmitAmoXor32(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR, biscuit::Ordering);
    static void EmitAmoXor64(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR, biscuit::Ordering);
    static void EmitAmoSwap8(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR, biscuit::Ordering);
    static void EmitAmoSwap16(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR, biscuit::Ordering);
    static void EmitAmoSwap32(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR, biscuit::Ordering);
    static void EmitAmoSwap64(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR, biscuit::Ordering);
    static void EmitAmoCAS8(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR, biscuit::GPR, biscuit::Ordering);
    static void EmitAmoCAS16(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR, biscuit::GPR, biscuit::Ordering);
    static void EmitAmoCAS32(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR, biscuit::GPR, biscuit::Ordering);
    static void EmitAmoCAS64(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR, biscuit::GPR, biscuit::Ordering);
    static void EmitSub(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR);
    static void EmitAnd(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR);
    static void EmitAndi(Backend&, biscuit::GPR, biscuit::GPR, u64);
    static void EmitOr(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR);
    static void EmitOri(Backend&, biscuit::GPR, biscuit::GPR, u64);
    static void EmitXor(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR);
    static void EmitXori(Backend&, biscuit::GPR, biscuit::GPR, u64);
    static void EmitSeqz(Backend&, biscuit::GPR, biscuit::GPR);
    static void EmitSnez(Backend&, biscuit::GPR, biscuit::GPR);
    static void EmitEqual(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR);
    static void EmitNotEqual(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR);
    static void EmitSetLessThanSigned(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR);
    static void EmitSetLessThanUnsigned(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR);
    static void EmitShl(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR);
    static void EmitShli(Backend&, biscuit::GPR, biscuit::GPR, i64);
    static void EmitShr(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR);
    static void EmitShri(Backend&, biscuit::GPR, biscuit::GPR, i64);
    static void EmitSar(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR);
    static void EmitSari(Backend&, biscuit::GPR, biscuit::GPR, i64);
    static void EmitRol8(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR);
    static void EmitRol16(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR);
    static void EmitRol32(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR);
    static void EmitRol64(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR);
    static void EmitRor8(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR);
    static void EmitRor16(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR);
    static void EmitRor32(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR);
    static void EmitRor64(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR);
    static void EmitDiv(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR);
    static void EmitDivu(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR);
    static void EmitDivw(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR);
    static void EmitDivuw(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR);
    static void EmitRem(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR);
    static void EmitRemu(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR);
    static void EmitRemw(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR);
    static void EmitRemuw(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR);
    static void EmitMul(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR);
    static void EmitMulh(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR);
    static void EmitMulhu(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR);
    static void EmitSelect(Backend&, biscuit::GPR, biscuit::GPR, biscuit::GPR, biscuit::GPR);
    static void EmitIToV(Backend&, biscuit::Vec, biscuit::GPR);
    static void EmitVToI(Backend&, biscuit::GPR, biscuit::Vec);
    static void EmitSetVectorStateFloat(Backend&);
    static void EmitSetVectorStateDouble(Backend&);
    static void EmitSetVectorStatePackedByte(Backend&);
    static void EmitSetVectorStatePackedWord(Backend&);
    static void EmitSetVectorStatePackedDWord(Backend&);
    static void EmitSetVectorStatePackedQWord(Backend&);
    static void EmitSetVMask(Backend&, biscuit::Vec);
    static void EmitVInsertInteger(Backend&, biscuit::Vec, biscuit::GPR, biscuit::Vec, u64);
    static void EmitVExtractInteger(Backend&, biscuit::GPR, biscuit::Vec, u64);
    static void EmitVAnd(Backend&, biscuit::Vec, biscuit::Vec, biscuit::Vec);
    static void EmitVOr(Backend&, biscuit::Vec, biscuit::Vec, biscuit::Vec);
    static void EmitVXor(Backend&, biscuit::Vec, biscuit::Vec, biscuit::Vec);
    static void EmitVSub(Backend&, biscuit::Vec, biscuit::Vec, biscuit::Vec);
    static void EmitVAdd(Backend&, biscuit::Vec, biscuit::Vec, biscuit::Vec);
    static void EmitVEqual(Backend&, biscuit::Vec, biscuit::Vec, biscuit::Vec, VecMask);
    static void EmitVIota(Backend&, biscuit::Vec, biscuit::Vec, VecMask);
    static void EmitVGather(Backend&, biscuit::Vec, biscuit::Vec, biscuit::Vec, biscuit::Vec, VecMask);
    static void EmitVSplat(Backend&, biscuit::Vec, biscuit::GPR);
    static void EmitVSplati(Backend&, biscuit::Vec, u64);
    static void EmitVMergei(Backend&, biscuit::Vec, biscuit::Vec, u64);
    static void EmitVSlli(Backend&, biscuit::Vec, biscuit::Vec, u64, VecMask);
    static void EmitVSrai(Backend&, biscuit::Vec, biscuit::Vec, u64, VecMask);
    static void EmitVSlideUpi(Backend&, biscuit::Vec, biscuit::Vec, u64, VecMask);
    static void EmitVSlideDowni(Backend&, biscuit::Vec, biscuit::Vec, u64, VecMask);
    static void EmitVFAdd(Backend&, biscuit::Vec, biscuit::Vec, biscuit::Vec);
};
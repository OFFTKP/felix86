#include "FEX/fex_test_loader.hpp"

#define TWOBYTE_TEST(opcode)                                                                                                                         \
    CATCH_TEST_CASE("0F_" #opcode, "[FEX][TwoByte]") {                                                                                               \
        FEXTestLoader::RunTest("ASM/TwoByte/0F_" #opcode ".asm");                                                                                    \
    }

TWOBYTE_TEST(40)
TWOBYTE_TEST(41)
TWOBYTE_TEST(42)
TWOBYTE_TEST(43)
TWOBYTE_TEST(44)
TWOBYTE_TEST(45)
TWOBYTE_TEST(46)
TWOBYTE_TEST(47)
TWOBYTE_TEST(48)
TWOBYTE_TEST(49)
TWOBYTE_TEST(4A)
TWOBYTE_TEST(4B)
TWOBYTE_TEST(4C)
TWOBYTE_TEST(4D)
TWOBYTE_TEST(4E)
TWOBYTE_TEST(4F)

TWOBYTE_TEST(54)
TWOBYTE_TEST(56)
TWOBYTE_TEST(57)
TWOBYTE_TEST(58)
TWOBYTE_TEST(59)
TWOBYTE_TEST(5C)

TWOBYTE_TEST(80)
TWOBYTE_TEST(81)
TWOBYTE_TEST(82)
TWOBYTE_TEST(83)
TWOBYTE_TEST(84)
TWOBYTE_TEST(85)
TWOBYTE_TEST(86)
TWOBYTE_TEST(87)
TWOBYTE_TEST(88)
TWOBYTE_TEST(89)
TWOBYTE_TEST(8A)
TWOBYTE_TEST(8B)
TWOBYTE_TEST(8C)
TWOBYTE_TEST(8D)
TWOBYTE_TEST(8E)
TWOBYTE_TEST(8F)

TWOBYTE_TEST(90)
TWOBYTE_TEST(91)
TWOBYTE_TEST(92)
TWOBYTE_TEST(93)
TWOBYTE_TEST(94)
TWOBYTE_TEST(95)
TWOBYTE_TEST(96)
TWOBYTE_TEST(97)
TWOBYTE_TEST(98)
TWOBYTE_TEST(99)
TWOBYTE_TEST(9A)
TWOBYTE_TEST(9B)
TWOBYTE_TEST(9C)
TWOBYTE_TEST(9D)
TWOBYTE_TEST(9E)
TWOBYTE_TEST(9F)
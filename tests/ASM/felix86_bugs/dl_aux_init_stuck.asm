%ifdef CONFIG
{
  "RegData": {
    "RSI": "0x0000000000000016"
  }
}
%endif

bits 64

global _start
_start:
lea rdx, [rel .stack + 8] ; get stack pointer past argc
mov rax, qword[rel .stack] ; get argc
lea rdi, qword[rdx + rax*8 + 8]
xor esi, esi
mov rdx, rdi

.loop_skip_envp:
add rdx, 8
cmp qword[rdx - 8], 0
jnz .loop_skip_envp

mov rax, qword[rdx]

.loop:
cmp rax, 0x33
jna .above
hlt

.above:
mov rcx, qword[rdx + 0x8]
mov rax, qword[rdx + 0x10]
add rdx, 16
inc rsi
test rax, rax
jnz .loop

int3
hlt

; stack at process initialization
.stack:
db 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC5, 0xFF, 0x3F, 0xF0, 0x3F, 0x00, 0x00, 0x00
db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
db 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
db 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE6, 0xFF, 0x3F, 0xF0, 0x3F, 0x00, 0x00, 0x00
db 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
db 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x17, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00
db 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xDF, 0xFF, 0x3F, 0xF0, 0x3F, 0x00, 0x00, 0x00
db 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
db 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
db 0x0B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
db 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
db 0x0D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
db 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
db 0x17, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
db 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00
db 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
db 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
db 0x19, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xB0, 0xFF, 0x3F, 0xF0, 0x3F, 0x00, 0x00, 0x00
db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
db 0xE5, 0xF9, 0xB2, 0x75, 0x93, 0x8A, 0x4D, 0x99, 0xCE, 0x34, 0x3C, 0x00, 0x5E, 0xC7, 0xE5, 0x8B
db 0x00, 0x00, 0x00, 0x00, 0x00, 0x2F, 0x68, 0x6F, 0x6D, 0x65, 0x2F, 0x73, 0x69, 0x70, 0x65, 0x65
db 0x64, 0x2F, 0x72, 0x6F, 0x6F, 0x74, 0x66, 0x73, 0x2F, 0x61, 0x2E, 0x6F, 0x75, 0x74, 0x00, 0x78
db 0x38, 0x36, 0x5F, 0x36, 0x34, 0x00, 0x2F, 0x68, 0x6F, 0x6D, 0x65, 0x2F, 0x73, 0x69, 0x70, 0x65
db 0x65, 0x64, 0x2F, 0x72, 0x6F, 0x6F, 0x74, 0x66, 0x73, 0x2F, 0x61, 0x2E, 0x6F, 0x75, 0x74, 0x00

.outdata:
dq 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
dq 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
dq 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
dq 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
dq 0, 0, 0, 0, 0, 0, 0, 0, 0, 0